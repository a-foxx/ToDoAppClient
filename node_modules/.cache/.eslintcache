[{"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\index.js":"1","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\App.js":"2","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\ListHeader.js":"3","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\ListItem.js":"4","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\Auth.js":"5","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\TickIcon.js":"6","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\ProgressBar.js":"7","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\Modal.js":"8"},{"size":257,"mtime":1691083974981,"results":"9","hashOfConfig":"10"},{"size":1524,"mtime":1692558917238,"results":"11","hashOfConfig":"10"},{"size":795,"mtime":1688938905012,"results":"12","hashOfConfig":"10"},{"size":1212,"mtime":1691689780634,"results":"13","hashOfConfig":"10"},{"size":3293,"mtime":1691702911801,"results":"14","hashOfConfig":"10"},{"size":631,"mtime":1689020505575,"results":"15","hashOfConfig":"10"},{"size":326,"mtime":1689021269486,"results":"16","hashOfConfig":"10"},{"size":3031,"mtime":1691689800918,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1gcfti0",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"21"},"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\index.js",[],[],[],"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\App.js",["45","46","47"],[],"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\ListHeader.js",[],[],"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\ListItem.js",[],[],"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\Auth.js",["48","49"],[],"import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst Auth = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(['email', 'token'])\r\n  const [error, setError] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [password, setPassword] = useState(null)\r\n  const [confirmPassword, setConfirmPassword] = useState(null)\r\n  const [isLogIn, setIsLogIn] = useState(true)\r\n\r\n  // console.log(email, password, confirmPassword)\r\n  // console.log('cookies:', cookies)\r\n\r\n  const viewLogin = (status) => {\r\n    setError(null)\r\n    setIsLogIn(status)\r\n  }\r\n\r\n  const handleSubmit = async (e, endpoint) => {\r\n    e.preventDefault()\r\n    if (!isLogIn && password !== confirmPassword) {\r\n      setError('Make sure passwords match!')\r\n      return\r\n    }\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {'Content-type': 'application/json'},\r\n        // credentials: 'include',\r\n        body: JSON.stringify({email, password})\r\n      })\r\n      const data = await response.json()\r\n      console.log('data ', data.message)\r\n      if (data.message) {\r\n        setError(data.message)\r\n      } else {\r\n        if (data.email && data.token) {\r\n          console.log(data.email)\r\n          setCookie('Email', data.email)\r\n          setCookie('AuthToken', data.token)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-container-box\">\r\n          <form title='login'>\r\n            <h2 title='header' >{isLogIn ? 'Please log in' : 'Please sign up'}</h2>\r\n            <input \r\n            type=\"email\" \r\n            placeholder=\"email\" \r\n            name='emailInput'\r\n            onChange={(e) => setEmail(e.target.value)} \r\n            />\r\n            <input \r\n            type=\"password\" \r\n            placeholder=\"password\" \r\n            onChange={(e) => setPassword(e.target.value)}\r\n            /> \r\n            {!isLogIn && <input \r\n            type=\"password\" \r\n            placeholder=\"confirm password\" \r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />}\r\n            <input \r\n            type=\"submit\" \r\n            className=\"create\"\r\n            data-testid=\"submit\" \r\n            value={isLogIn ? 'Log in' : 'Sign up'} \r\n            onClick={(e) => handleSubmit(e, isLogIn ? 'auth/login' : 'auth/signup')} \r\n            />\r\n          </form>\r\n          <div className=\"error-container\">\r\n            {error && \r\n            <p className=\"display-auth-error\" data-testid=\"error\">\r\n              {error}  \r\n            </p>}\r\n          </div>\r\n          <div className=\"auth-options\">\r\n            <button \r\n            onClick={() => viewLogin(false)}\r\n            style={{backgroundColor : !isLogIn ? 'rgb(255, 255, 255)' : 'rgb(188, 188, 188)'}}\r\n            >Sign up</button>\r\n            <button \r\n            onClick={() => viewLogin(true)}\r\n            style={{backgroundColor : !isLogIn ? 'rgb(255, 255, 255)' : 'rgb(188, 188, 188)'}}\r\n            >Log in</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  \r\n\r\n","C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\TickIcon.js",[],[],"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\ProgressBar.js",[],[],"C:\\Users\\Alan\\Documents\\Itcareerswitch\\codecademy\\projects\\to-do-app\\client\\src\\components\\Modal.js",["50","51"],[],"import React from 'react'\r\nimport { useState } from \"react\"\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst Model = ({ mode, setShowModal, getData, task }) => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(null)\r\n  const [error, setError] = useState(null)\r\n  const editMode = mode === 'edit' ? true : false\r\n\r\n  const [data, setData] = useState({\r\n    user_email: editMode ? task.user_email : cookies.Email,\r\n    title: editMode ? task.title : \"\",\r\n    progress: editMode ? task.progress : 50,\r\n    date: editMode ? task.date : new Date()\r\n  })\r\n\r\n  const postData = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/to-do/todos`, {\r\n        method: \"POST\",\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n      })\r\n      const responseJSON = await response.json()\r\n        if (response.ok) {\r\n          setShowModal(false)\r\n          getData()\r\n        } else {\r\n          console.log(responseJSON)\r\n          setError(responseJSON.message)\r\n        }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const editData = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/to-do/todos/${task.id}`, {\r\n        method: 'PUT',\r\n        headers: {'content-type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n      })\r\n      const responseJSON = await response.json()\r\n      if (response.ok) {\r\n        setShowModal(false)\r\n        getData()\r\n      } else {\r\n        console.log(responseJSON.message)\r\n        setError(responseJSON.message)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setData(data => ({\r\n      ...data, \r\n      [name] : value\r\n    }))\r\n  }\r\n\r\n    return (\r\n      <div className=\"overlay\">\r\n        <div className=\"modal\">\r\n          <div className=\"form-title-container\">\r\n            <h3>Lets {mode} your task</h3>\r\n            <button onClick={() => setShowModal(false)}>X</button>\r\n          </div>\r\n          <form>\r\n            <input \r\n            required \r\n            maxLength={30} \r\n            placeholder=\" Your task goes here\"\r\n            name=\"title\"\r\n            value={data.title}\r\n            onChange={handleChange}\r\n            />\r\n            <br/>\r\n            <input\r\n            required\r\n            type=\"range\"\r\n            min='0'\r\n            max='100'\r\n            name=\"progress\"\r\n            value={data.progress}\r\n            onChange={handleChange}\r\n            />\r\n            <input className={mode} type=\"submit\" onClick={editMode ? editData : postData}\r\n            />\r\n          </form>\r\n          <div className=\"error-container\">\r\n            {error && \r\n            <p className=\"display-auth-error\">\r\n              {error}  \r\n            </p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Model;\r\n  ",{"ruleId":"52","severity":1,"message":"53","line":9,"column":18,"nodeType":"54","messageId":"55","endLine":9,"endColumn":27},{"ruleId":"52","severity":1,"message":"56","line":9,"column":29,"nodeType":"54","messageId":"55","endLine":9,"endColumn":41},{"ruleId":"57","severity":1,"message":"58","line":28,"column":9,"nodeType":"59","endLine":28,"endColumn":11,"suggestions":"60"},{"ruleId":"52","severity":1,"message":"61","line":6,"column":10,"nodeType":"54","messageId":"55","endLine":6,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":6,"column":30,"nodeType":"54","messageId":"55","endLine":6,"endColumn":42},{"ruleId":"52","severity":1,"message":"53","line":6,"column":19,"nodeType":"54","messageId":"55","endLine":6,"endColumn":28},{"ruleId":"52","severity":1,"message":"56","line":6,"column":30,"nodeType":"54","messageId":"55","endLine":6,"endColumn":42},"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken' and 'getData'. Either include them or remove the dependency array.","ArrayExpression",["62"],"'cookies' is assigned a value but never used.",{"desc":"63","fix":"64"},"Update the dependencies array to be: [authToken, getData]",{"range":"65","text":"66"},[835,837],"[authToken, getData]"]